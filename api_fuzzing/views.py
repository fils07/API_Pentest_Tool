from django.shortcuts import render
from collectionmanagement.models import APICollection,Endpoint
import requests
# Create your views here.

def fuzzAPI(request):
    
    endpoints = dict()
    for collection in APICollection.objects.all():
        endpoints[collection.name] = Endpoint.objects.all().filter(api=collection)
    context = {
            'collections':APICollection.objects.all(),
            'endpoints':Endpoint.objects.all(),
    }
    
    if request.method == 'POST':
        # Récupérer l'adresse de l'API depuis le formulaire
        api_url = request.POST.get('url')
        
        # Récupérer le fichier wordlist depuis le formulaire
        wordlist_file = request.FILES['wordlist']
        
        # Lire les lignes du fichier wordlist
        wordlist = wordlist_file.read().decode('utf-8').splitlines()
        
        # Liste pour stocker les résultats
        results = []

        # Effectuer le fuzzing en testant chaque mot de la wordlist
        for word in wordlist:
            url = f"{api_url}/{word}"
            try:
                response = requests.get(url)
                if response.status_code == 200:
                    results.append(f"Found: {url} - Status Code: {response.status_code}")
                else:
                    results.append(f"Not Found: {url} - Status Code: {response.status_code}")
            except requests.RequestException as e:
                results.append(f"Error with URL {url}: {e}")

        # Afficher les résultats dans une page HTML
        context['results']=results

    return render(request,'api_fuzzing/fuzzing.html',context)